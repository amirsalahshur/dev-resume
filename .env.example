# Portfolio Application Environment Variables
# Copy this file to .env and update the values for your environment

# ===========================================
# APPLICATION CONFIGURATION
# ===========================================

# Node.js environment (development, staging, production)
NODE_ENV=production

# Application server port
PORT=3000

# Health check service port
HEALTH_CHECK_PORT=3001

# Application metadata
APP_NAME=amir-portfolio
APP_VERSION=2.0.0
APP_DESCRIPTION="Portfolio website for Amir Salahshur"

# ===========================================
# DOMAIN AND SSL CONFIGURATION
# ===========================================

# Your domain name (update this with your actual domain)
DOMAIN=your-domain.com
WWW_DOMAIN=www.your-domain.com

# Email for Let's Encrypt SSL certificates
LETSENCRYPT_EMAIL=your-email@domain.com

# ===========================================
# HEALTH CHECK CONFIGURATION
# ===========================================

# Health check interval in milliseconds
HEALTH_CHECK_INTERVAL=30000

# Health check timeout in milliseconds
HEALTH_CHECK_TIMEOUT=5000

# Main application host for health checks
MAIN_APP_HOST=localhost
MAIN_APP_PORT=3000

# ===========================================
# LOGGING CONFIGURATION
# ===========================================

# Log level (error, warn, info, debug)
LOG_LEVEL=info

# Enable structured logging
STRUCTURED_LOGGING=true

# Log directory
LOG_DIR=/var/log/portfolio

# ===========================================
# MONITORING AND METRICS
# ===========================================

# Enable metrics collection
ENABLE_METRICS=true

# Metrics server port
METRICS_PORT=9090

# Prometheus endpoint path
METRICS_PATH=/metrics

# ===========================================
# PERFORMANCE CONFIGURATION
# ===========================================

# PM2 cluster instances (set to 'max' for auto-detection)
PM2_INSTANCES=max

# Memory limit for PM2 restart
MEMORY_LIMIT=1G

# CPU quota percentage
CPU_QUOTA=200

# ===========================================
# SECURITY CONFIGURATION
# ===========================================

# Rate limiting (requests per second)
RATE_LIMIT_WINDOW=10

# Maximum requests per window
RATE_LIMIT_MAX=100

# Enable CORS
ENABLE_CORS=true

# Allowed CORS origins (comma-separated)
CORS_ORIGINS=https://your-domain.com,https://www.your-domain.com

# ===========================================
# DEPLOYMENT CONFIGURATION
# ===========================================

# Deployment user
DEPLOY_USER=portfolio

# Deployment path
DEPLOY_PATH=/var/www/portfolio

# Backup retention (number of backups to keep)
BACKUP_RETENTION=5

# Enable rollback functionality
ROLLBACK_ENABLED=true

# ===========================================
# DATABASE CONFIGURATION (if needed)
# ===========================================

# Database URL (if you add database functionality)
# DATABASE_URL=postgresql://user:password@localhost:5432/portfolio

# Redis URL (for caching, if needed)
# REDIS_URL=redis://localhost:6379

# ===========================================
# EXTERNAL SERVICES CONFIGURATION
# ===========================================

# Contact form service (if implemented)
# CONTACT_FORM_SERVICE_URL=
# CONTACT_FORM_API_KEY=

# Analytics service (if implemented)
# ANALYTICS_ID=
# ANALYTICS_DOMAIN=

# ===========================================
# NOTIFICATION CONFIGURATION
# ===========================================

# Slack webhook for deployment notifications
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# Email service for notifications (if implemented)
# SMTP_HOST=
# SMTP_PORT=587
# SMTP_USER=
# SMTP_PASS=
# FROM_EMAIL=

# ===========================================
# DEVELOPMENT CONFIGURATION
# ===========================================

# Enable debug mode
DEBUG=false

# Hot reload in development
HOT_RELOAD=true

# Source maps in production
GENERATE_SOURCEMAP=false

# ===========================================
# DOCKER CONFIGURATION
# ===========================================

# Docker registry
DOCKER_REGISTRY=ghcr.io

# Docker image name
DOCKER_IMAGE=amirsalahshur/dev-resume

# Docker image tag
DOCKER_TAG=latest

# ===========================================
# CI/CD CONFIGURATION
# ===========================================

# GitHub repository
GITHUB_REPOSITORY=amirsalahshur/dev-resume

# Branch for production deployments
PRODUCTION_BRANCH=production

# Branch for staging deployments
STAGING_BRANCH=main

# ===========================================
# SYSTEM RESOURCE LIMITS
# ===========================================

# Maximum memory usage percentage before alerting
MEMORY_THRESHOLD=90

# Maximum CPU usage percentage before alerting
CPU_THRESHOLD=90

# Maximum disk usage percentage before alerting
DISK_THRESHOLD=95

# ===========================================
# NETWORK CONFIGURATION
# ===========================================

# Server host binding
HOST=0.0.0.0

# Keep-alive timeout
KEEP_ALIVE_TIMEOUT=5000

# Headers timeout
HEADERS_TIMEOUT=60000

# ===========================================
# CACHE CONFIGURATION
# ===========================================

# Cache TTL for static assets (in seconds)
STATIC_CACHE_TTL=31536000

# Cache TTL for HTML files (in seconds)
HTML_CACHE_TTL=3600

# Enable gzip compression
ENABLE_GZIP=true

# Gzip compression level (1-9)
GZIP_LEVEL=6